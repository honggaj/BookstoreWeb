/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiDashboardStatsGet$Json } from '../fn/dashboard/api-dashboard-stats-get-json';
import { ApiDashboardStatsGet$Json$Params } from '../fn/dashboard/api-dashboard-stats-get-json';
import { apiDashboardStatsGet$Plain } from '../fn/dashboard/api-dashboard-stats-get-plain';
import { ApiDashboardStatsGet$Plain$Params } from '../fn/dashboard/api-dashboard-stats-get-plain';
import { DashboardStatsResponse } from '../models/dashboard-stats-response';

@Injectable({ providedIn: 'root' })
export class DashboardService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiDashboardStatsGet()` */
  static readonly ApiDashboardStatsGetPath = '/api/Dashboard/stats';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiDashboardStatsGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiDashboardStatsGet$Plain$Response(params?: ApiDashboardStatsGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<DashboardStatsResponse>> {
    return apiDashboardStatsGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiDashboardStatsGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiDashboardStatsGet$Plain(params?: ApiDashboardStatsGet$Plain$Params, context?: HttpContext): Observable<DashboardStatsResponse> {
    return this.apiDashboardStatsGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<DashboardStatsResponse>): DashboardStatsResponse => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiDashboardStatsGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiDashboardStatsGet$Json$Response(params?: ApiDashboardStatsGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<DashboardStatsResponse>> {
    return apiDashboardStatsGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiDashboardStatsGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiDashboardStatsGet$Json(params?: ApiDashboardStatsGet$Json$Params, context?: HttpContext): Observable<DashboardStatsResponse> {
    return this.apiDashboardStatsGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<DashboardStatsResponse>): DashboardStatsResponse => r.body)
    );
  }

}
