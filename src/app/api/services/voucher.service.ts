/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiVoucherCreatePost$Json } from '../fn/voucher/api-voucher-create-post-json';
import { ApiVoucherCreatePost$Json$Params } from '../fn/voucher/api-voucher-create-post-json';
import { apiVoucherCreatePost$Plain } from '../fn/voucher/api-voucher-create-post-plain';
import { ApiVoucherCreatePost$Plain$Params } from '../fn/voucher/api-voucher-create-post-plain';
import { apiVoucherGet$Json } from '../fn/voucher/api-voucher-get-json';
import { ApiVoucherGet$Json$Params } from '../fn/voucher/api-voucher-get-json';
import { apiVoucherGet$Plain } from '../fn/voucher/api-voucher-get-plain';
import { ApiVoucherGet$Plain$Params } from '../fn/voucher/api-voucher-get-plain';
import { apiVoucherIdDelete$Json } from '../fn/voucher/api-voucher-id-delete-json';
import { ApiVoucherIdDelete$Json$Params } from '../fn/voucher/api-voucher-id-delete-json';
import { apiVoucherIdDelete$Plain } from '../fn/voucher/api-voucher-id-delete-plain';
import { ApiVoucherIdDelete$Plain$Params } from '../fn/voucher/api-voucher-id-delete-plain';
import { ObjectResultCustomModel } from '../models/object-result-custom-model';
import { StringResultCustomModel } from '../models/string-result-custom-model';
import { VoucherResponseListResultCustomModel } from '../models/voucher-response-list-result-custom-model';

@Injectable({ providedIn: 'root' })
export class VoucherService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiVoucherGet()` */
  static readonly ApiVoucherGetPath = '/api/Voucher';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiVoucherGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiVoucherGet$Plain$Response(params?: ApiVoucherGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<VoucherResponseListResultCustomModel>> {
    return apiVoucherGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiVoucherGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiVoucherGet$Plain(params?: ApiVoucherGet$Plain$Params, context?: HttpContext): Observable<VoucherResponseListResultCustomModel> {
    return this.apiVoucherGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<VoucherResponseListResultCustomModel>): VoucherResponseListResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiVoucherGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiVoucherGet$Json$Response(params?: ApiVoucherGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<VoucherResponseListResultCustomModel>> {
    return apiVoucherGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiVoucherGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiVoucherGet$Json(params?: ApiVoucherGet$Json$Params, context?: HttpContext): Observable<VoucherResponseListResultCustomModel> {
    return this.apiVoucherGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<VoucherResponseListResultCustomModel>): VoucherResponseListResultCustomModel => r.body)
    );
  }

  /** Path part for operation `apiVoucherCreatePost()` */
  static readonly ApiVoucherCreatePostPath = '/api/Voucher/Create';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiVoucherCreatePost$Plain()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiVoucherCreatePost$Plain$Response(params?: ApiVoucherCreatePost$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<StringResultCustomModel>> {
    return apiVoucherCreatePost$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiVoucherCreatePost$Plain$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiVoucherCreatePost$Plain(params?: ApiVoucherCreatePost$Plain$Params, context?: HttpContext): Observable<StringResultCustomModel> {
    return this.apiVoucherCreatePost$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<StringResultCustomModel>): StringResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiVoucherCreatePost$Json()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiVoucherCreatePost$Json$Response(params?: ApiVoucherCreatePost$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<StringResultCustomModel>> {
    return apiVoucherCreatePost$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiVoucherCreatePost$Json$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiVoucherCreatePost$Json(params?: ApiVoucherCreatePost$Json$Params, context?: HttpContext): Observable<StringResultCustomModel> {
    return this.apiVoucherCreatePost$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<StringResultCustomModel>): StringResultCustomModel => r.body)
    );
  }

  /** Path part for operation `apiVoucherIdDelete()` */
  static readonly ApiVoucherIdDeletePath = '/api/Voucher/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiVoucherIdDelete$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiVoucherIdDelete$Plain$Response(params: ApiVoucherIdDelete$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<ObjectResultCustomModel>> {
    return apiVoucherIdDelete$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiVoucherIdDelete$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiVoucherIdDelete$Plain(params: ApiVoucherIdDelete$Plain$Params, context?: HttpContext): Observable<ObjectResultCustomModel> {
    return this.apiVoucherIdDelete$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<ObjectResultCustomModel>): ObjectResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiVoucherIdDelete$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiVoucherIdDelete$Json$Response(params: ApiVoucherIdDelete$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<ObjectResultCustomModel>> {
    return apiVoucherIdDelete$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiVoucherIdDelete$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiVoucherIdDelete$Json(params: ApiVoucherIdDelete$Json$Params, context?: HttpContext): Observable<ObjectResultCustomModel> {
    return this.apiVoucherIdDelete$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<ObjectResultCustomModel>): ObjectResultCustomModel => r.body)
    );
  }

}
