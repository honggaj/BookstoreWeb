/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiBookByGenreGenreIdGet$Json } from '../fn/book/api-book-by-genre-genre-id-get-json';
import { ApiBookByGenreGenreIdGet$Json$Params } from '../fn/book/api-book-by-genre-genre-id-get-json';
import { apiBookByGenreGenreIdGet$Plain } from '../fn/book/api-book-by-genre-genre-id-get-plain';
import { ApiBookByGenreGenreIdGet$Plain$Params } from '../fn/book/api-book-by-genre-genre-id-get-plain';
import { apiBookCreatePost$Json } from '../fn/book/api-book-create-post-json';
import { ApiBookCreatePost$Json$Params } from '../fn/book/api-book-create-post-json';
import { apiBookCreatePost$Plain } from '../fn/book/api-book-create-post-plain';
import { ApiBookCreatePost$Plain$Params } from '../fn/book/api-book-create-post-plain';
import { apiBookDeleteIdDelete$Json } from '../fn/book/api-book-delete-id-delete-json';
import { ApiBookDeleteIdDelete$Json$Params } from '../fn/book/api-book-delete-id-delete-json';
import { apiBookDeleteIdDelete$Plain } from '../fn/book/api-book-delete-id-delete-plain';
import { ApiBookDeleteIdDelete$Plain$Params } from '../fn/book/api-book-delete-id-delete-plain';
import { apiBookGet$Json } from '../fn/book/api-book-get-json';
import { ApiBookGet$Json$Params } from '../fn/book/api-book-get-json';
import { apiBookGet$Plain } from '../fn/book/api-book-get-plain';
import { ApiBookGet$Plain$Params } from '../fn/book/api-book-get-plain';
import { apiBookIdGet$Json } from '../fn/book/api-book-id-get-json';
import { ApiBookIdGet$Json$Params } from '../fn/book/api-book-id-get-json';
import { apiBookIdGet$Plain } from '../fn/book/api-book-id-get-plain';
import { ApiBookIdGet$Plain$Params } from '../fn/book/api-book-id-get-plain';
import { apiBookSearchGet$Json } from '../fn/book/api-book-search-get-json';
import { ApiBookSearchGet$Json$Params } from '../fn/book/api-book-search-get-json';
import { apiBookSearchGet$Plain } from '../fn/book/api-book-search-get-plain';
import { ApiBookSearchGet$Plain$Params } from '../fn/book/api-book-search-get-plain';
import { apiBookUpdateIdPut$Json } from '../fn/book/api-book-update-id-put-json';
import { ApiBookUpdateIdPut$Json$Params } from '../fn/book/api-book-update-id-put-json';
import { apiBookUpdateIdPut$Plain } from '../fn/book/api-book-update-id-put-plain';
import { ApiBookUpdateIdPut$Plain$Params } from '../fn/book/api-book-update-id-put-plain';
import { BookResponseListResultCustomModel } from '../models/book-response-list-result-custom-model';
import { BookResponseResultCustomModel } from '../models/book-response-result-custom-model';
import { ObjectResultCustomModel } from '../models/object-result-custom-model';

@Injectable({ providedIn: 'root' })
export class BookService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiBookGet()` */
  static readonly ApiBookGetPath = '/api/Book';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookGet$Plain$Response(params?: ApiBookGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<BookResponseListResultCustomModel>> {
    return apiBookGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookGet$Plain(params?: ApiBookGet$Plain$Params, context?: HttpContext): Observable<BookResponseListResultCustomModel> {
    return this.apiBookGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<BookResponseListResultCustomModel>): BookResponseListResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookGet$Json$Response(params?: ApiBookGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<BookResponseListResultCustomModel>> {
    return apiBookGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookGet$Json(params?: ApiBookGet$Json$Params, context?: HttpContext): Observable<BookResponseListResultCustomModel> {
    return this.apiBookGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<BookResponseListResultCustomModel>): BookResponseListResultCustomModel => r.body)
    );
  }

  /** Path part for operation `apiBookIdGet()` */
  static readonly ApiBookIdGetPath = '/api/Book/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookIdGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookIdGet$Plain$Response(params: ApiBookIdGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<BookResponseResultCustomModel>> {
    return apiBookIdGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookIdGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookIdGet$Plain(params: ApiBookIdGet$Plain$Params, context?: HttpContext): Observable<BookResponseResultCustomModel> {
    return this.apiBookIdGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<BookResponseResultCustomModel>): BookResponseResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookIdGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookIdGet$Json$Response(params: ApiBookIdGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<BookResponseResultCustomModel>> {
    return apiBookIdGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookIdGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookIdGet$Json(params: ApiBookIdGet$Json$Params, context?: HttpContext): Observable<BookResponseResultCustomModel> {
    return this.apiBookIdGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<BookResponseResultCustomModel>): BookResponseResultCustomModel => r.body)
    );
  }

  /** Path part for operation `apiBookCreatePost()` */
  static readonly ApiBookCreatePostPath = '/api/Book/Create';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookCreatePost$Plain()` instead.
   *
   * This method sends `multipart/form-data` and handles request body of type `multipart/form-data`.
   */
  apiBookCreatePost$Plain$Response(params?: ApiBookCreatePost$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<ObjectResultCustomModel>> {
    return apiBookCreatePost$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookCreatePost$Plain$Response()` instead.
   *
   * This method sends `multipart/form-data` and handles request body of type `multipart/form-data`.
   */
  apiBookCreatePost$Plain(params?: ApiBookCreatePost$Plain$Params, context?: HttpContext): Observable<ObjectResultCustomModel> {
    return this.apiBookCreatePost$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<ObjectResultCustomModel>): ObjectResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookCreatePost$Json()` instead.
   *
   * This method sends `multipart/form-data` and handles request body of type `multipart/form-data`.
   */
  apiBookCreatePost$Json$Response(params?: ApiBookCreatePost$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<ObjectResultCustomModel>> {
    return apiBookCreatePost$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookCreatePost$Json$Response()` instead.
   *
   * This method sends `multipart/form-data` and handles request body of type `multipart/form-data`.
   */
  apiBookCreatePost$Json(params?: ApiBookCreatePost$Json$Params, context?: HttpContext): Observable<ObjectResultCustomModel> {
    return this.apiBookCreatePost$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<ObjectResultCustomModel>): ObjectResultCustomModel => r.body)
    );
  }

  /** Path part for operation `apiBookUpdateIdPut()` */
  static readonly ApiBookUpdateIdPutPath = '/api/Book/Update/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookUpdateIdPut$Plain()` instead.
   *
   * This method sends `multipart/form-data` and handles request body of type `multipart/form-data`.
   */
  apiBookUpdateIdPut$Plain$Response(params: ApiBookUpdateIdPut$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<ObjectResultCustomModel>> {
    return apiBookUpdateIdPut$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookUpdateIdPut$Plain$Response()` instead.
   *
   * This method sends `multipart/form-data` and handles request body of type `multipart/form-data`.
   */
  apiBookUpdateIdPut$Plain(params: ApiBookUpdateIdPut$Plain$Params, context?: HttpContext): Observable<ObjectResultCustomModel> {
    return this.apiBookUpdateIdPut$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<ObjectResultCustomModel>): ObjectResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookUpdateIdPut$Json()` instead.
   *
   * This method sends `multipart/form-data` and handles request body of type `multipart/form-data`.
   */
  apiBookUpdateIdPut$Json$Response(params: ApiBookUpdateIdPut$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<ObjectResultCustomModel>> {
    return apiBookUpdateIdPut$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookUpdateIdPut$Json$Response()` instead.
   *
   * This method sends `multipart/form-data` and handles request body of type `multipart/form-data`.
   */
  apiBookUpdateIdPut$Json(params: ApiBookUpdateIdPut$Json$Params, context?: HttpContext): Observable<ObjectResultCustomModel> {
    return this.apiBookUpdateIdPut$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<ObjectResultCustomModel>): ObjectResultCustomModel => r.body)
    );
  }

  /** Path part for operation `apiBookDeleteIdDelete()` */
  static readonly ApiBookDeleteIdDeletePath = '/api/Book/Delete/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookDeleteIdDelete$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookDeleteIdDelete$Plain$Response(params: ApiBookDeleteIdDelete$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<ObjectResultCustomModel>> {
    return apiBookDeleteIdDelete$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookDeleteIdDelete$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookDeleteIdDelete$Plain(params: ApiBookDeleteIdDelete$Plain$Params, context?: HttpContext): Observable<ObjectResultCustomModel> {
    return this.apiBookDeleteIdDelete$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<ObjectResultCustomModel>): ObjectResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookDeleteIdDelete$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookDeleteIdDelete$Json$Response(params: ApiBookDeleteIdDelete$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<ObjectResultCustomModel>> {
    return apiBookDeleteIdDelete$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookDeleteIdDelete$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookDeleteIdDelete$Json(params: ApiBookDeleteIdDelete$Json$Params, context?: HttpContext): Observable<ObjectResultCustomModel> {
    return this.apiBookDeleteIdDelete$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<ObjectResultCustomModel>): ObjectResultCustomModel => r.body)
    );
  }

  /** Path part for operation `apiBookSearchGet()` */
  static readonly ApiBookSearchGetPath = '/api/Book/Search';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookSearchGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookSearchGet$Plain$Response(params?: ApiBookSearchGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<BookResponseListResultCustomModel>> {
    return apiBookSearchGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookSearchGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookSearchGet$Plain(params?: ApiBookSearchGet$Plain$Params, context?: HttpContext): Observable<BookResponseListResultCustomModel> {
    return this.apiBookSearchGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<BookResponseListResultCustomModel>): BookResponseListResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookSearchGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookSearchGet$Json$Response(params?: ApiBookSearchGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<BookResponseListResultCustomModel>> {
    return apiBookSearchGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookSearchGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookSearchGet$Json(params?: ApiBookSearchGet$Json$Params, context?: HttpContext): Observable<BookResponseListResultCustomModel> {
    return this.apiBookSearchGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<BookResponseListResultCustomModel>): BookResponseListResultCustomModel => r.body)
    );
  }

  /** Path part for operation `apiBookByGenreGenreIdGet()` */
  static readonly ApiBookByGenreGenreIdGetPath = '/api/Book/ByGenre/{genreId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookByGenreGenreIdGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookByGenreGenreIdGet$Plain$Response(params: ApiBookByGenreGenreIdGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<BookResponseListResultCustomModel>> {
    return apiBookByGenreGenreIdGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookByGenreGenreIdGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookByGenreGenreIdGet$Plain(params: ApiBookByGenreGenreIdGet$Plain$Params, context?: HttpContext): Observable<BookResponseListResultCustomModel> {
    return this.apiBookByGenreGenreIdGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<BookResponseListResultCustomModel>): BookResponseListResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBookByGenreGenreIdGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookByGenreGenreIdGet$Json$Response(params: ApiBookByGenreGenreIdGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<BookResponseListResultCustomModel>> {
    return apiBookByGenreGenreIdGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBookByGenreGenreIdGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBookByGenreGenreIdGet$Json(params: ApiBookByGenreGenreIdGet$Json$Params, context?: HttpContext): Observable<BookResponseListResultCustomModel> {
    return this.apiBookByGenreGenreIdGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<BookResponseListResultCustomModel>): BookResponseListResultCustomModel => r.body)
    );
  }

}
